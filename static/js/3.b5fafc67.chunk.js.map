{"version":3,"sources":["componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/Profile.module.css","componets/Profile/MyPosts/MyPosts.module.css","componets/Profile/MyPosts/Post/Post.module.css","componets/Profile/ProfileInfo/ProfileStatusWithHook.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/MyPosts/Post/Post.jsx","componets/Profile/MyPosts/MyPosts.jsx","componets/Profile/MyPosts/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","content","img","alt","img01","src","avatar","av","photos","large","icon","de","name","fullName","info","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","about","aboutMe","Preloader","Post","item","message","count","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","placeholder","component","MyPosts","PostElements","PostData","map","p","id","postes","values","addPost","post","MyPostsContainer","connect","state","profilePage","newPostText","Profile","isAuth","to","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","isFetching","React","Component","compose","auth","usersPage","withRouter"],"mappings":"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","file":"static/js/3.b5fafc67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img01\":\"ProfileInfo_img01__2AH3l\",\"img\":\"ProfileInfo_img__3Zl5B\",\"avatar\":\"ProfileInfo_avatar__18eAo\",\"av\":\"ProfileInfo_av__3x389\",\"de\":\"ProfileInfo_de__2t3KP\",\"name\":\"ProfileInfo_name__dhkJi\",\"info\":\"ProfileInfo_info__182sC\",\"about\":\"ProfileInfo_about__URyQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__37N_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postes\":\"MyPosts_postes__12TLp\",\"post\":\"MyPosts_post__1Kw5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2bMO2\",\"img\":\"Post_img__11KgQ\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span className={s.status} onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport icon from \"../../../assets/img/icon.png\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.img}>\r\n        <img\r\n          alt=\"icon\"\r\n          className={s.img01}\r\n          src=\"https://www.imgacademy.com/themes/custom/imgacademy/images/helpbox-contact.jpg\"\r\n        />\r\n        <div className={s.avatar}>\r\n          <div className={s.av}>\r\n            <img\r\n              src={profile.photos.large != null ? profile.photos.large : icon}\r\n              alt=\"Avatar\"\r\n            />\r\n          </div>\r\n          <div className={s.de}>\r\n            <span className={s.name}> {profile.fullName} </span>\r\n            <div className={s.info}>\r\n              <div>\r\n                <div>Facebook: {profile.contacts.facebook}</div>\r\n                <div>Website: {profile.contacts.website}</div>\r\n                <div>VK: {profile.contacts.vk}</div>\r\n                <div>Twitter: {profile.contacts.twitter}</div>\r\n                <div>Instagram: {profile.contacts.instagram}</div>\r\n                <div>Youtube: {profile.contacts.youtube}</div>\r\n                <div>Github: {profile.contacts.github}</div>\r\n                <div>MainLink: {profile.contacts.mainLink}</div>\r\n              </div>\r\n              <div className={s.about}>\r\n                <ProfileStatusWithHook\r\n                  status={status}\r\n                  updateStatus={updateStatus}\r\n                />\r\n                <b>About me:</b> <br /> {profile.aboutMe}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        alt=\"icon\"\r\n        className={s.img}\r\n        src=\"https://filmix.co/uploads/frames/6241/f222903-avatar-2009_original.jpg\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>\r\n        {props.count}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let PostElements = props.PostData.map((p) => (\r\n    <Post message={p.message} count={p.count} key={p.id} />\r\n  ));\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.post);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postes}>\r\n      <h3>my post</h3>\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n      <div className={s.post}>{PostElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"post\"\r\n          type=\"text\"\r\n          placeholder=\"Add text\"\r\n          component=\"textarea\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst MyPostsReduxForm = reduxForm({ form: \"post\" })(MyPostsForm);\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../Redux/ProfileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    PostData: state.profilePage.PostData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        isAuth={props.isAuth}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../Redux/ProfileReduser\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  profile: state.profilePage.profile,\r\n  isFetching: state.usersPage.isFetching,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}